# TCP Input
#[source::tcp:4567]
[bricata:raw]
SHOULD_LINEMERGE=false
TIME_PREFIX = timestamp\":\"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%6N%z
MAX_TIMESTAMP_LOOKAHEAD = 32
KV_MODE = JSON
SEDCMD-remove_underscore = s/bricata_alerts/alerts/
SEDCMD-remove_syslog_header = s/^([^{]+)//
TRANSFORMS-set_full_sourcetype = set_sourcetype
# Set host to sensor
TRANSFORMS-sensor_as_host = sensor_host

[(?::){0}bricata:*:raw]
KV_MODE = JSON
EVAL-vendor_product = "bricata"
# Map IPs and Ports for all Zeek sources
FIELDALIAS-bro_src = bro_log.id.orig_h ASNEW src
FIELDALIAS-bro_srcip = bro_log.id.orig_h ASNEW src_ip
FIELDALIAS-bro_srcport = bro_log.id.orig_p ASNEW src_port
FIELDALIAS-bro_dest = bro_log.id.resp_h ASNEW dest
FIELDALIAS-bro_destip = bro_log.id.resp_h ASNEW dest_ip
FIELDALIAS-bro_destport = bro_log.id.resp_p ASNEW dest_port
FIELDALIAS-alert_dest = dest_ip ASNEW dest 
FIELDALIAS-alert_src = src_ip ASNEW src
FIELDALIAS-flow_id = bro_log.uid ASNEW flow_id
FIELDALIAS-uid = bro_log.uid ASNEW uid
FIELDALIAS-failure_reason = bro_log.failure_reason ASNEW failure_reason
FIELDALIAS-proto = bro_log.proto ASNEW proto
FIELDALIAS-transport = bro_log.proto ASNEW transport
FIELDALIAS-lat = bricata.dest_location.location.lat ASNEW lat
FIELDALIAS-lon = bricata.dest_location.location.lon ASNEW lon
FIELDALIAS-country = bricata.dest_location.country ASNEW country
FIELDALIAS-city = bricata.dest_location.city_name ASNEW city
FIELDALIAS-mime_type = bro_log.mime_type ASNEW mime_type
FIELDALIAS-hash_sha1 = bro_log.sha1 ASNEW hash_sha1
FIELDALIAS-hash_md5 = bro_log.md5 ASNEW hash_md5
FIELDALIAS-fuid = bro_log.fuid ASNEW fuid

# Bricata Suricata Alerts
[bricata:suricata:raw]
FIELDALIAS-dvc = bricata.sensor_ipv4 ASNEW dvc 
FIELDALIAS-dvc_ip = bricata.sensor_ipv4 ASNEW dvc_ip
FIELDALIAS-alert_category = alert.category ASNEW category
FIELDALIAS-alert_type = event_type ASNEW type
FIELDALIAS-alert_action = alert.action ASNEW action 
FIELDALIAS-alert_signature = alert.signature ASNEW signature
FIELDALIAS-alert_sig_id = alert.signature_id ASNEW sid
FIELDALIAS-alert_gid = alert.gid ASNEW gid
FIELDALIAS-rev = alert.rev ASNEW rev
FIELDALIAS-flow_id_suricata = bro.uid ASNEW uid
FIELDALIAS-alert_subject = category ASNEW subject
FIELDALIAS-alert_body = alert.signature ASNEW body
FIELDALIAS-alert_sev_id = alert.severity ASNEW severity_id
FIELDALIAS-alert_proto = app_proto ASNEW proto
FIELDALIAS-app = app_proto ASNEW app
FIELDALIAS-bytes_in = flow.bytes_toclient ASNEW bytes_in
FIELDALIAS-bytes_out = flow.bytes_toserver ASNEW bytes_out
FIELDALIAS-pkts_in = flow.pkts_toclient ASNEW packets_in
FIELDALIAS-pkts_out = flow.pkts_toserver ASNEW packets_out
EVAL-bytes = if(isnum(bytes),bytes,bytes_in+bytes_out)
EVAL-packets = if(isnum(packets),packets,packets_in+packets_out)
EVAL-ids_type = "network"
EVAL-app = "bricata"
LOOKUP-alert_severity = alert_severity alert.severity OUTPUT severity

## Custom Bricata Zeek-generated alerts
[bricata:alerts:raw]
FIELDALIAS-alert_sig_id = alert.signature_id ASNEW id
FIELDALIAS-alert_category = alert.category ASNEW category
FIELDALIAS-alert_dvc = bricata.sensor_ipv4 ASNEW dvc 
FIELDALIAS-alert_signature = alert.signature ASNEW signature
FIELDALIAS-alert_type = event_type ASNEW type
FIELDALIAS-fuid = bro.fuid ASNEW fuid
FIELDALIAS-flow_id = bro.uid ASNEW flow_id
FIELDALIAS-uid = bro.fuid ASNEW uid
FIELDALIAS-app = bro.service ASNEW app
FIELDALIAS-alert_sid = alert.signature_id AS sid
FIELDALIAS-rev = alert.rev ASNEW rev
EVAL-ids_type = "network"
EVAL-action = "allowed"
EVAL-app = "suricata"
EVAL-severity=if(match('alert.severity', "4"), "low", if(match('alert.severity', "3"), "medium",if(match('alert.severity', "2"), "high",if(match('alert.severity', "1"), "critical", "informational"))))

# Bricata Cylance Suspected Malware Alerts
[bricata:cylance:raw]
FIELDALIAS-hash = cylance.SHA256 ASNEW file_hash
FIELDALIAS-signature = alert.signature ASNEW signature
FIELDALIAS-category = alert.category ASNEW category
FIELDALIAS-sender = bro.smtp_sender ASNEW sender
FIELDALIAS-path = bro.smb_path ASNEW file_path
FIELDALIAS-filename = bro.filename ASNEW file_name
FIELDALIAS-md5_hash = bro.md5 ASNEW md5_hash
FIELDALIAS-hash_sha256 = cylance.SHA256 ASNEW hash_sha256
FIELDALIAS-cylance_score = cylance.Score ASNEW cylance_score
FIELDALIAS-flow_id = 'bro.conn_uids{}' ASNEW flow_id
FIELDALIAS-signature_id = alert.signature_id ASNEW signature_id
FIELDALIAS-bytes = bro.bytes_analyzed ASNEW bytes
FIELDALIAS-download = bro.download ASNEW download
FIELDALIAS-fuid = bro.fid ASNEW fuid
FIELDALIAS-file_description = bro.file_description ASNEW file_description
FIELDALIAS-http_host = bro.http_host ASNEW http_host
FIELDALIAS-http_method = bro.http_method ASNEW http_method
FIELDALIAS-http_referrer = bro.http_referrer ASNEW http_referrer
FIELDALIAS-uri = bro.http_uri ASNEW uri
FIELDALIAS-mime_type = bro.mime_type ASNEW mime_type
FIELDALIAS-missing_bytes = bro.missing_bytes ASNEW missing_bytes
FIELDALIAS-service = bro.service ASNEW service
EVAL-flow_id = coalesce('bro.conn_uids{}', 'bro.conn_uids{}')
EVAL-severity = "critical"
EVAL-action = "deferred"

# Bricata DNS Hunt Events
[bricata:dns_hunt:raw]
FIELDALIAS-query = bro_log.query ASNEW query
FIELDALIAS-observation = bro_log.observation ASNEW observation

# Bricata SMTP
[bricata:smtp:raw]
FIELDALIAS-file_name = bro_log.filename AS file_name
FIELDALIAS-orig_src = bro_log.id.orig_h AS orig_src
FIELDALIAS-orig_dest = bro_log.id.resp_h AS orig_dest
FIELDALIAS-sender = bro_log.mailfrom AS src_user
FIELDALIAS-rcpto = 'bro_log.rcptto{}' AS rcptto 
FIELDALIAS-recipient = rcptto AS recipient
FIELDALIAS-email_subject = bro_log.subject AS subject 
FIELDALIAS-msg_id = bro_log.msg_id AS message_id
FIELDALIAS-return_addr = bro_log.reply_to AS return_addr
FIELDALIAS-to = 'bro_log.to{}' AS to 
FIELDALIAS-orig_recipient = to AS orig_recipient
FIELDALIAS-status_code = bro_log.last_reply AS status_code
FIELDALIAS-helo = bro_log.helo ASNEW helo
FIELDALIAS-is_webmail = bro_log.is_webmail ASNEW is_webmail
FIELDALIAS-tls = bro_log.tls ASNEW tls
EVAL-protocol = "smtp"

# Bricata Connection Info 
[bricata:conn:raw]
FIELDALIAS-direction = bro_log.direction ASNEW direction
FIELDALIAS-vlan = bro_log.vlan ASNEW vlan
FIELDALIAS-src_mac = bro_log.orig_l2_addr ASNEW src_mac
FIELDALIAS-dest_mac = bro_log.resp_l2_addr ASNEW dest_mac
FIELDALIAS-session_id = bro_log.uid ASNEW session_id
FIELDALIAS-app = bro_log.service ASNEW app
FIELDALIAS-tcp_flag = bro_log.conn_state ASNEW tcp_flag
FIELDALIAS-conn_state = bro_log.conn_state ASNEW conn_state
FIELDALIAS-resp_bytes = bro_log.resp_bytes ASNEW resp_bytes
FIELDALIAS-orig_bytes = bro_log.orig_bytes ASNEW orig_bytes
REPORT-bytes_to_int = bytes_in_int, bytes_out_int
REPORT-pkts_to_int = pkts_in_int, pkts_out_int
EVAL-bytes = if(isnum(bytes),bytes,bytes_in+bytes_out)
EVAL-packets = if(isnum(packets),packets,packets_in+packets_out)
EVAL-duration = if(isnum(duration),bro_log.duration,null())
LOOKUP-bricata_conn_state  = bricata_conn_state bro_log.conn_state OUTPUT conn_state_meaning, action

# Bricata HTTP
[bricata:http:raw]
FIELDALIAS-http_host = bro_log.http_host ASNEW site
FIELDALIAS-http_uri = bro_log.uri ASNEW uri_query
FIELDALIAS-http_method = bro_log.method ASNEW http_method
FIELDALIAS-http_referrer = bro_log.referrer ASNEW http_referrer
FIELDALIAS-http_user_agent = bro_log.user_agent ASNEW http_user_agent
FIELDALIAS-http_status_code = bro_log.status_code ASNEW status
FIELDALIAS=uri_query = bro_log.uri ASNEW uri_query
REPORT-bytes_to_int = web_bytes_in_int, web_bytes_out_int
EVAL-file_name = coalesce('bro_log.orig_filenames{},'bro_log.orig_filenames{})
EVAL-fuid = coalesce('bro_log.orig_fuids{}', bro_log.resp_fuids{}, fuid)
EVAL-bytes = if(isnum(bytes),bytes,bytes_in+bytes_out)
REPORT-get_uri_query = get_uri_query
EVAL-http_user_agent_length = len(http_user_agent)
EVAL-url = 'bro_log.http_host' . "" . 'bro_log.uri'
EVAL-url_length = len('bro_log.http_host' . "" . 'bro_log.uri')

# Bricata DNS 
[bricata:dns:raw]
EVAL-answers = coalesce('bro_log.answers{}', 'bro_log.answers{}')
FIELDALIAS-dns_tot_answers = bro_log.total_answers AS answer_count
FIELDALIAS-dns_query = bro_log.query ASNEW query
FIELDALIAS-qclass_name = bro_log.qclass_name ASNEW record_class
FIELDALIAS-qtype_name = bro_log.qtype_name  ASNEW query_type
FIELDALIAS-record_type = bro_log.qtype_name  ASNEW record_type 
FIELDALIAS-reply_code_id = bro_log.rcode ASNEW reply_code_id
FIELDALIAS-trans_id = bro_log.trans_id ASNEW transaction_id
FIELDALIAS-TTLs = "bro_log.TTLs{}" ASNEW ttl
FIELDALIAS-response_time = bro_log.rtt ASNEW response_time
FIELDALIAS-reply_code = bro_log.rcode_name ASNEW reply_code
EVAL-message_type = mvappend("QUERY","RESPONSE")
LOOKUP-reply_code = dns_reply_codes bro_log.rcode_name OUTPUT reply_code_name, reply_code_long

# Bricata Notice
[bricata:notice:raw]
FIELDALIAS-body_msg = bro_log.msg ASNEW msg
FIELDALIAS-notice_subject = bro_log.note ASNEW note
FIELDALIAS-action = 'bro_log.actions{}' ASNEW action
FIELDALIAS-sub = bro_log.sub ASNEW sub
FIELDALIAS-suppress_for = bro_log.suppress_for ASNEW suppress_for


# Bricata Files
[bricata:files:raw]
FIELDALIAS-fuid = bro_log.fuid ASNEW fuid
EVAL-src_ip = coalesce('bro_log.tx_hosts{}', 'bro_log.tx_hosts{}')
EVAL-dest_ip = coalesce('bro_log.rx_hosts{}', 'bro_log.rx_hosts{}')
EVAL-src = coalesce('bro_log.tx_hosts{}', 'bro_log.tx_hosts{}')
EVAL-dest = coalesce('bro_log.rx_hosts{}', 'bro_log.rx_hosts{}')
EVAL-conn_uids = coalesce('bro_log.conn_uids{}', 'bro_log.conn_uids{}', conn_uids)
EVAL-file_hash = coalesce(hash_md5, hash_md5, file_hash)
REPORT-bricata_files = extracted_files, filename_files, fuid_files
EVAL-file_name = coalesce(extracted_filename,extracted_filename)

# Bricata SSL
[bricata:ssl:raw]
FIELDALIAS-issuer = bro_log.issuer ASNEW issuer
FIELDALIAS-server_name = bro_log.server_name ASNEW server_name
FIELDALIAS-ssl_server_name = bro_log.ssl_version ASNEW ssl_version
FIELDALIAS-ssl_ja3 = bro_log.ja3 ASNEW ja3
FIELDALIAS-ssl_subject = bro_log.subject ASNEW subject
FIELDALIAS-ssl_validation_status = bro_log.validation_status ASNEW validation_status

# Bricata x509
[bricata:x509:raw]
FIELDALIAS-x509_issuer = bro_log.certificat.issuer ASNEW ssl_issuer
FIELDALIAS-x509_key_alg = bro_log.certificate.key_alg ASNEW ssl_publickey_algorithm
FIELDALIAS-x509_serial = bro_log.certificate.serial ASNEW ssl_serial
FIELDALIAS-x509_subject = bro_log.certificate.subject ASNEW ssl_subject
FIELDALIAS-x509_sig_alg = bro_log.certificate.sig_alg ASNEW ssl_signature_algorithm
FIELDALIAS-x509_version = bro_log.certificate.version ASNEW ssl_version
FIELDALIAS-ssl_subject_common_name = 'bro_log.san.dns{}' ASNEW ssl_subject_common_name
FIELDALIAS-x509_valid_after = bro_log.certificate.not_valid_after AS not_valid_after
FIELDALIAS-x509_ssl_end_time = bro_log.certificate.not_valid_after AS ssl_end_time
FIELDALIAS-x509_ssl_start_time = bro_log.certificate.not_valid_before AS ssl_start_time
EXTRACT-ssl_issuer_email = emailAddress\=(?<ssl_issuer_email>[^,]*)
EVAL-ssl_issuer_email = coalesce('bro_log.san.email{}', ssl_issuer_email)
EVAL-src_ip = coalesce('bro_log.san.ip{}', 'bro_log.san.ip{}')
EVAL-src = coalesce('bro_log.san.ip{}', 'bro_log.san.ip{}')
EVAL-days_to_expire = round(((strptime('bro_log.certificate.not_valid_after', "%Y-%m-%dT%H:%M:%S.%6N%z") - now() )/ 86400),0)
EVAL-ssl_validity_window = round(strptime(ssl_end_time,"%Y-%m-%dT%H:%M:%S.%6N%z") - strptime(ssl_start_time,"%Y-%m-%dT%H:%M:%S.%6N%z"),0)
REPORT-CN_OU = ssl_cn, ssl_ou
REPORT-ssl_subject_common_name = ssl_subject_common_name

# Bricata SMB MAPPING
[bricata:smb_mapping:raw]
FIELDALIAS-share_type = bro_log.share_type ASNEW share_type
EVAL-file_path = coalesce('bro_log.path','bro_log.path')

# Bricata SMB FILES
[bricata:smb_files:raw]
FIELDALIAS-smb_files_action = bro_log.action ASNEW action
FIELDALIAS-name = bro_log.name ASNEW name
FIELDALIAS-size = bro_log.size ASNEW size
EVAL-times_accessed = coalesce('bro_log.times.accessed','bro_log.times.accessed')
EVAL-times_changed = coalesce('bro_log.times.changed','bro_log.times.changed')
EVAL-times_created = coalesce('bro_log.times.created','bro_log.times.created')
EVAL-times_modified = coalesce('bro_log.times.modified','bro_log.times.modified')

# Bricata PE
[bricata:pe:raw]
FIELDALIAS-pe_os =bro_log.os ASNEW os
FIELDALIAS-pe_machine = bro_log.machine ASNEW machine
FIELDALIAS-pe_subsystem = bro_log.subsystem ASNEW subsystem
EVAL-compile_ts = coalesce('bro_log.compile_ts', 'bro_log.compile_ts')
EVAL-section_names = coalesce('bro_log.section_names{}', 'bro_log.section_names{}')
EVAL-fuid = coalesce('bro_log.fuid', 'bro_log.fuid')
EVAL-has_cert_table = coalesce('bro_log.has_cert_table', 'bro_log.has_cert_table')
EVAL-has_debug_data = coalesce('bro_log.has_debug_data', 'bro_log.has_debug_data')
EVAL-has_export_table = coalesce('bro_log.has_export_table', 'bro_log.has_export_table')
EVAL-has_import_table = coalesce('bro_log.has_import_table', 'bro_log.has_import_table')
EVAL-is_64bit = coalesce('bro_log.is_64bit', 'bro_log.is_64bit')
EVAL-is_exe = coalesce('bro_log.is_exe', 'bro_log.is_exe')
EVAL-is_machine = coalesce('bro_log.machine', 'bro_log.machine')
EVAL-uses_aslr = coalesce('bro_log.uses_aslr', 'bro_log.uses_aslr')
EVAL-uses_code_integrity = coalesce('bro_log.uses_code_integrity', 'bro_log.uses_code_integrity')
EVAL-uses_dep = coalesce('bro_log.uses_dep', 'bro_log.uses_dep')
EVAL-uses_seh = coalesce('bro_log.uses_seh', 'bro_log.uses_seh')

# Bricata FTP
[bricata:ftp:raw]
FIELDALIAS-command = bro_log.command ASNEW command
FIELDALIAS-arg = bro_log.arg ASNEW arg
FIELDALIAS-password = bro_log.password ASNEW password
FIELDALIAS-reply_code = bro_log.reply_code ASNEW reply_code
FIELDALIAS-reply_msg = bro_log.reply_msg ASNEW reply_msg
FIELDALIAS-user = bro_log.user ASNEW user
FIELDALIAS-fuid = bro_log.fuid ASNEW fuid
FIELDALIAS-data_channel_src_ip = bro_log.data_channel.orig_h ASNEW data_channel_src_ip
FIELDALIAS-data_channel_dest_ip = bro_log.data_channel.resp_h ASNEW data_channel_dest_ip
FIELDALIAS-data_channel_dest_port = bro_log.data_channel.resp_p ASNEW data_channel_dest_port
FIELDALIAS-data_channel_passive = bro_log.data_channel.passive ASNEW data_channel_passive
REPORT-bricata_ftp_files = ftp_files
EVAL-file_name = coalesce(extracted_filename,extracted_filename)

# Bricata Software
[bricata:software:raw]
FIELDALIAS-software_host = bro_log.software_host ASNEW software_host
FIELDALIAS-name = bro_log.name ASNEW name
FIELDALIAS-software_type = bro_log.software_type ASNEW software_type
FIELDALIAS-unparsed_version = bro_log.unparsed_version ASNEW unparsed_version
FIELDALIAS-version_major = bro_log.version.major ASNEW version_major
FIELDALIAS-version_minor = bro_log.version.minor ASNEW version_minor
FIELDALIAS-version_minor2 = bro_log.version.minor2 ASNEW version_minor2
EVAL-src_ip = coalesce('bro_log.software_host', 'bro_log.software_host', src_ip)
EVAL-src = coalesce('bro_log.software_host', 'bro_log.software_host', src)

# Bricata SSH
[bricata:ssh:raw]
FIELDALIAS-auth_attempts = bro_log.auth_attempts ASNEW auth_attempts
FIELDALIAS-auth_success = bro_log.auth_success ASNEW auth_success
FIELDALIAS-cipher_alg = bro_log.cipher_alg ASNEW cipher_alg
FIELDALIAS-client = bro_log.client ASNEW client
FIELDALIAS-compression_alg = bro_log.compression_alg ASNEW compression_alg
FIELDALIAS-direction = bro_log.direction ASNEW direction
FIELDALIAS-host_key = bro_log.host_key ASNEW host_key
FIELDALIAS-host_key_alg = bro_log.host_key_alg ASNEW host_key_alg
FIELDALIAS-kex_alg = bro_log.kex_alg ASNEW kex_alg
FIELDALIAS-mac_alg = bro_log.mac_alg ASNEW mac_alg
FIELDALIAS-server = bro_log.server ASNEW server
FIELDALIAS-ssh_version = bro_log.ssh_version ASNEW ssh_version
EVAL-action = if(match(auth_success, "true"), "success", "failure")

# Bricata Weird
[bricata:weird:raw]
FIELDALIAS-name = bro_log.name ASNEW name
FIELDALIAS-notice = bro_log.notice ASNEW notice

# Bricata Modbus
[bricata:modbus:raw]
FIELDALIAS-function = bro_log.func ASNEW function
FIELDALIAS-exception = bro_log.exception ASNEW exception

# Bricata NTLM
[bricata:ntlm:raw]
FIELDALIAS-server_dns_computer_name = bro_log.server_dns_computer_name ASNEW dns
FIELDALIAS-server_nb_computer_name = bro_log.server_nb_computer_name ASNEW nt_host
EVAL-action = if(match('bro_log.success', "true"), "success", "failure")
REPORT-domain_name = domain_name

# Bricata RDP
[bricata:rdp:raw]
FIELDALIAS-security_protocol = bro_log.security_protocol ASNEW security_protocol
FIELDALIAS-result = bro_log.result ASNEW result
FIELDALIAS-cert_count = bro_log.cert_count ASNEW cert_count
FIELDALIAS-cookie = bro_log.cookie ASNEW cookie

# Bricata SIP
[bricata:sip:raw]
FIELDALIAS-call_id = bro_log.call_id ASNEW call_id
FIELDALIAS-content_type = bro_log.content_type ASNEW content_type
FIELDALIAS-method = bro_log.method ASNEW method
FIELDALIAS-request_body_len = bro_log.request_body_len ASNEW request_body_len
FIELDALIAS-request_from = bro_log.request_from ASNEW request_from
FIELDALIAS-request_path = 'bro_log.request_from' ASNEW request_path
FIELDALIAS-request_to = bro_log.request_to ASNEW request_to
FIELDALIAS-response_body_length = bro_log.response_body_len ASNEW response_body_length
FIELDALIAS-response_from = bro_log.response_body_len ASNEW response_from
FIELDALIAS-response_path = 'bro_log.respnse_path{}' ASNEW response_path
FIELDALIAS-respnse_to = bro_log.response_to ASNEW response_to
FIELDALIAS-seq = bro_log.seq = bro_log.seq ASNEW seq
FIELDALIAS-status_code = bro_log.status_code ASNEW status_code
FIELDALIAS-status_msg = bro_log.status_msg ASNEW status_msg
FIELDALIAS-trans_depth = bro_log.trans_depth ASNEW trans_depth
FIELDALIAS-uri = bro_log.uri ASNEW uri
FIELDALIAS-user_agent = bro_log.user_agent ASNEW user_agent

# Bricata RADIUS
[bricata:radius:raw]
FIELDALIAS-mac = bro_log.mac ASNEW mac
FIELDALIAS-results = bro_log.results ASNEW results
FIELDALIAS-ttl = bro_log.ttl ASNEW ttl
FIELDALIAS-username = bro_log.username ASNEW username
FIELDALIAS-user = bro_log.username ASNEW user



# Syslog Items #
# Syslog Metadata
[(?::){0}bricata:*:syslog]
SHOULD_LINEMERGE = false
TRUNCATE = 0
EVENT_BREAKER_ENABLE = true
MAX_TIMESTAMP_LOOKAHEAD = 20
TIME_FORMAT = %s.%6N
FIELDALIAS-app = service AS app

# Map IPs and Ports for all Zeek sources
FIELDALIAS-bro_src = id_orig_h ASNEW src
FIELDALIAS-bro_srcip = id_orig_h ASNEW src_ip
FIELDALIAS-bro_srcport = id_orig_p ASNEW src_port
FIELDALIAS-bro_dest = id_resp_h ASNEW dest
FIELDALIAS-bro_destip = id_resp_h ASNEW dest_ip
FIELDALIAS-bro_destport = id_resp_p ASNEW dest_port
#FIELDALIAS-alert_dest = dest_ip ASNEW dest
#FIELDALIAS-alert_src = src_ip ASNEW src
FIELDALIAS-flow_id = uid ASNEW flow_id
FIELDALIAS-failure_reason = failure_reason ASNEW failure_reason

# Alerts
FIELDALIAS-body_msg = msg AS body
FIELDALIAS-subject = note AS subject
EVAL-vendor_action = split(actions, ",")
EVAL-severity = if(isnotnull(body),"unknown", severity)

# Bricata Syslog Components
[bricata:conn:syslog]
REPORT-syslog_conn = syslog_conn
FIELDALIAS-tcp_flag = conn_state AS tcp_flag
FIELDALIAS-bytes_in = resp_bytes ASNEW bytes_in
FIELDALIAS-bytes_out = orig_bytes ASNEW bytes_out
FIELDALIAS-pkts_in = resp_pkts ASNEW pkts_in
FIELDALIAS-pkts_out = orig_pkts ASNEW pkts_out
EVAL-bytes = if(isnum(bytes),bytes,bytes_in+bytes_out)
EVAL-packets = if(isnum(packets),packets,packets_in+packets_out)

[bricata:dns:syslog]
REPORT-syslog_dns = syslog_dns
FIELDALIAS-query_type = qtype_name AS query_type
FIELDALIAS-qclass_name = qclass_name AS record_class
FIELDALIAS-qtype_name = qtype_name  ASNEW query_type
FIELDALIAS-reply_code_id = rcode AS reply_code_id
FIELDALIAS-trans_id = trans_id AS transaction_id
FIELDALIAS-TTLs = TTLs AS ttl
FIELDALIAS-response_time = rtt ASNEW response_time
FIELDALIAS-reply_code = rcode_name ASNEW reply_code
EVAL-message_type=if(match(answers, "(\.*)"), "RESPONSE", "QUERY")
LOOKUP-reply_code = dns_reply_codes bro_log.rcode_name OUTPUT reply_code_name, reply_code_long

[bricata:http:syslog]
REPORT-syslog_http = syslog_http
EVAL-url = if(coalesce(extracted_host, host, hostname) == "-", null(), if(coalesce('id.resp_p', id_resp_p) == "-", if(uri == "-", coalesce(extracted_host, host, hostname), coalesce(extracted_host, host, hostname).uri), if(uri == "-", coalesce(extracted_host, host, hostname).":".coalesce('id.resp_p', id_resp_p), coalesce(extracted_host, host, hostname).":".coalesce('id.resp_p', id_resp_p).uri)))
EXTRACT-uri_query = \?(?<uri_query>.*) in uri
FIELDALIAS-uri_path = uri AS uri_path
FIELDALIAS-http_user_agent = user_agent ASNEW http_user_agent
FIELDALIAS-http_status = status_code ASNEW http_status
FIELDALIAS-http_referrer = referrer ASNEW http_referrer
FIELDALIAS-http_method = method ASNEW http_method
EVAL-url_length = len(url)
EVAL-http_user_agent_length = len(user_agent)

[bricata:intel:syslog]
REPORT-syslog_intel = syslog_intel

[bricata:notice:syslog]
REPORT-syslog_notice = syslog_notice
EVAL-action = split(actions, ",")
FIELDALIAS-dest = dst AS dest
FIELDALIAS-dvc = host AS dvc
EVAL-ids_type = "network"
FIELDALIAS-category = note AS category
FIELDALIAS-id = uid AS id

[bricata:ssl:syslog]
REPORT-syslog_ssl = syslog_ssl

[bricata:weird:syslog]
REPORT-syslog_weird = syslog_weird

[bricata:smtp:syslog]
REPORT-syslog_smtp = syslog_smtp
FIELDALIAS-orig_src = id_orig_h AS orig_src
FIELDALIAS-recipient = rcptto AS recipient
FIELDALIAS-return_addr = reply_to AS return_addr
FIELDALIAS-orig_recipient = id_resp_h AS orig_recipient

[bricata:dhcp:syslog]
REPORT-syslog_dhcp = syslog_dhcp

[bricata:dpd:syslog]
REPORT-syslog_dpd = syslog_dpd

[bricata:ftp:syslog]
REPORT-syslog_ftp = syslog_ftp

[bricata:irc:syslog]
REPORT-syslog_irc = syslog_irc

[bricata:socks:syslog]
REPORT-syslog_socks = syslog_socks

[bricata:ssh:syslog]
REPORT-syslog_ssh = syslog_ssh

[bricata:tunnel:syslog]
REPORT-syslog_tunnel = syslog_tunnel

[bricata:x509:syslog]
REPORT-syslog_x509 = syslog_x509

[bricata:kerberos:syslog]
REPORT-syslog_kerberos = syslog_kerberos

[bricata:sip:syslog]
REPORT-syslog-sip = syslog_sip

[bricata:pe:syslog]
REPORT-syslog_pe = syslog_pe

[bricata:radius:syslog]
REPORT-syslog_radius = syslog_radius

[bricata:rdp:syslog]
REPORT-syslog_rdp = syslog_rdp

[bricata:software:syslog]
REPORT-syslog_software = syslog_software

[bricata:syslog:syslog]
REPORT-syslog_syslog = syslog_syslog

[bricata:files:syslog]
REPORT-syslog_files = syslog_files
EVAL-src_ip = coalesce('tx_hosts', 'tx_hosts')
EVAL-dest_ip = coalesce('rx_hosts', 'rx_hosts')
EVAL-src = coalesce('tx_hosts', 'tx_hosts')
EVAL-dest = coalesce('rx_hosts', 'rx_hosts')

[bricata:snmp:syslog]
REPORT-syslog_snmp = syslog_snmp

[bricata:smb:syslog]
REPORT-syslog_smb = syslog_smb

[bricata:ntlm:syslog]
REPORT-syslog_ntlm = syslog_ntlm

